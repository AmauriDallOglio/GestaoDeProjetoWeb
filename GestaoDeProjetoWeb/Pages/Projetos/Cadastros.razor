@page "/Projetos/Cadastros"
@using System.Text.Json
@using GestaoDeProjetoWeb.Data
@using GestaoDeProjetoWeb.Servico
@* @inject ProjetoService ProjetoService *@
@inject NavigationManager NavigationManager


<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <title>Projeto</title>
    <style>
        .form-custom {
            font-size: 18px; /* Tamanho da fonte */
            font-family: Arial, sans-serif; /* Tipo da fonte */
            row-gap: 15px; /* Espaçamento entre os inputs na vertical */
        }

        .form-custom .form-outline {
            margin-bottom: 20px; /* Espaçamento entre os inputs */
        }

        .form-control-lg {
            font-size: 16px; /* Tamanho da fonte dos inputs */
        }

        .form-label {
            font-weight: bold;
        }
    </style>
</head>
<body>
    <h3>Novo Projeto</h3>

    <EditForm Model="@projetoCadastro" OnValidSubmit="@CadastrarProjeto">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-floating col-12">
            <input type="text" class="form-control form-control-lg" id="nomeProjeto" @bind="projetoCadastro.NomeProjeto" placeholder="Descreva o nome do projeto" />
            <label for="nomeProjeto">Nome do Projeto</label>
            <ValidationMessage For="@(() => projetoCadastro.NomeProjeto)" />
        </div>

        <div class="form-floating col-12">
            <textarea class="form-control form-control-lg" id="descricao" @bind="projetoCadastro.Descricao" placeholder="Descreva a descrição do projeto"></textarea>
            <label for="descricao">Descrição</label>
            <ValidationMessage For="@(() => projetoCadastro.Descricao)" />
        </div>

        <div class="form-floating col-md-6">
            <input type="date" class="form-control form-control-lg" id="dataHoraInicio" @bind="projetoCadastro.DataHoraInicio" />
            <label for="dataHoraInicio">Data inicial</label>
            <ValidationMessage For="@(() => projetoCadastro.DataHoraInicio)" />
        </div>

        <div class="form-floating col-md-6">
            <input type="date" class="form-control form-control-lg" id="dataHoraFim" @bind="projetoCadastro.DataHoraFim" />
            <label for="dataHoraFim">Data final</label>
            <ValidationMessage For="@(() => projetoCadastro.DataHoraFim)" />
        </div>

        <div class="form-floating col-6">
            <select class="form-select form-control-lg" id="situacao" @bind="projetoCadastro.Situacao">
                <option value="">Selecione a situação</option>
                <option value="1">Planejado</option>
                <option value="2">Em Andamento</option>
                <option value="3">Atrasado</option>
                <option value="4">Em Revisão</option>
                <option value="5">Em Espera</option>
                <option value="6">Em Andamento (Baixa Prioridade)</option>
                <option value="7">Em Andamento (Média Prioridade)</option>
                <option value="8">Em Andamento (Alta Prioridade)</option>
                <option value="9">Em Teste</option>
                <option value="10">Pendente Aprovação</option>
                <option value="11">Pendente Recursos</option>
                <option value="12">Aguardando Feedback do Cliente</option>
                <option value="13">Aguardando Aprovação Interna</option>
                <option value="14">Cancelado</option>
                <option value="15">Concluído</option>
            </select>
            <label for="situacao">Situação:</label>
            <ValidationMessage For="@(() => projetoCadastro.Situacao)" />
        </div>

        <div class="col-12">
            <button type="submit" class="btn btn-primary">Salvar</button>
        </div>
    </EditForm>

    @if (!string.IsNullOrWhiteSpace(erro))
    {
        <div class="alert alert-danger" role="alert">
            @erro
        </div>
    }
</body>
</html>

@code {
    private ProjetoDto projetoCadastro = new ProjetoDto();
    private string erro;
    private HttpClient httpClient = new HttpClient();

    private async Task CadastrarProjeto()
    {
        try
        {
            var response = await httpClient.PostAsJsonAsync("https://localhost:7006/api/v1/Projeto/Inserir", projetoCadastro);
            if (!response.IsSuccessStatusCode)
            {
                erro = "Ocorreu um erro ao adicionar o projeto. Por favor, tente novamente.";
                await AtivarTemporizadorErro();
            }
            else
            {
                NavigationManager.NavigateTo("/Projetos/Grid");
            }
        }
        catch (Exception ex)
        {
            erro = "Ocorreu um erro ao adicionar o projeto. Por favor, tente novamente. " + ex.Message;
            await AtivarTemporizadorErro();
        }
    }

    private async Task AtivarTemporizadorErro()
    {
        await Task.Delay(10000); // Aguarda 10 segundos
        erro = null;
        StateHasChanged(); // Notifica o Blazor para atualizar a exibição
    }
}

